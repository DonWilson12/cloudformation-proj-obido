AWSTemplateFormatVersion: 2010-09-09
Description: >
    Database Stack creation prerequisite:
    - RDS Security Group

Parameters:

  ENVname:
    Description: "Server Environment name."
    ConstraintDescription: "Choose an Environment from the drop down"
    Type: "String"
    AllowedValues: 
      - "dev"
      - "test"
      - "staging"
      - "prod"

  DBSubnets:
    Description: Subnets to launch instances into.
    Type: "List<AWS::EC2::Subnet::Id>"

  RDSSG:
    Description: Select the Security Group to use for the ELB.
    Type: AWS::EC2::SecurityGroup::Id

  DatabaseUser:
    NoEcho: 'true'
    Type: String
    Description: Database admin account name.
    MinLength: '5'
    MaxLength: '16'
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: "Name must begin with a letter and contain only alphanumeric characters."

  DatabasePassword:
    NoEcho: 'true'
    Type: "String"
    Description: "Database admin account password"
    MinLength: '6'
    MaxLength: '41'
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: "Password must contain only alphanumeric characters."

  DatabaseName:
    Type: "String"
    Description: "Database name"
    MinLength: '1'
    MaxLength: '30'
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: "Name must begin with a letter and contain only alphanumeric characters."

  DatabaseSize:
    Type: "String"
    Description: "Database storage size in gigabytes (GB)"
    MinLength: '1'
    AllowedPattern: "[5-9][0-9]*"
    ConstraintDescription: "Enter a size of at least 5 GB"

  DatabaseEngine:
    Type: "String"
    Description: "Database engine, MySQL or PostgreSQL"
    ConstraintDescription: "Choose an engine from the drop down"
    AllowedValues: 
      - "mysql"
      - "postgres"

  DatabaseInstanceClass:
    Type: "String"
    Description: "Database instance class"
    ConstraintDescription: "Choose an instance class from the drop down"
    AllowedValues: 
      - "db.t2.small"
      - "db.t2.medium"
      - "db.t2.large"
      - "db.t3.micro"
      - "db.m4.large"
      - "db.m4.xlarge"
      - "db.m4.2xlarge"
      - "db.m4.4xlarge"
      - "db.m4.10xlarge"
      - "db.r3.large"
      - "db.r3.xlarge"
      - "db.r3.2xlarge"
      - "db.r3.4xlarge"
      - "db.r3.8xlarge"

Conditions:
  UseProdEnv: !Equals
    - !Ref "ENVname"
    - "prod"

Resources:
  DbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "RDS DB subnet group"
      SubnetIds:
        Ref: DBSubnets

  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBSubnetGroupName:
        Ref: DbSubnetGroup
      VPCSecurityGroups:
        - Ref: RDSSG
      Engine:
        Ref: DatabaseEngine
      DBName:
        Ref: DatabaseName
      MasterUsername:
        Ref: DatabaseUser
      MasterUserPassword:
        Ref: DatabasePassword
      DBInstanceClass:
        Ref: DatabaseInstanceClass
      AllocatedStorage:
        Ref: DatabaseSize
      StorageType: gp2
      MultiAZ: !If [ "UseProdEnv", 'true', 'false' ]

Outputs:

  RdsDbId:
    Description: "RDS Database ID"
    Value:
      Ref: Database

  DbName:
    Description: "RDS Database Name"
    Value: 
      Ref: DatabaseName

  RdsDbURL:
    Description: "RDS Database URL"
    Value: !GetAtt "Database.Endpoint.Address"

  DbUser:
    Description: "RDS Database admin account user"
    Value:
      Ref: DatabaseUser

  DbPassword:
    Description: "RDS Database admin account password"
    Value:
      Ref: DatabasePassword
